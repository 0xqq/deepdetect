/bin/bash ../libtool  --tag=CXX   --mode=compile g++ -DHAVE_CONFIG_H -I. -I..    -Wall -Wextra -g -fopenmp -I/home/beniz/projects/deepdetect/apps/caffe/include/ -I/home/beniz/projects/deepdetect/apps/caffe/build/src/ -std=gnu++11 -MT deepdetect.lo -MD -MP -MF .deps/deepdetect.Tpo -c -o deepdetect.lo deepdetect.cc
libtool: compile:  g++ -DHAVE_CONFIG_H -I. -I.. -Wall -Wextra -g -fopenmp -I/home/beniz/projects/deepdetect/apps/caffe/include/ -I/home/beniz/projects/deepdetect/apps/caffe/build/src/ -std=gnu++11 -MT deepdetect.lo -MD -MP -MF .deps/deepdetect.Tpo -c deepdetect.cc  -fPIC -DPIC -o .libs/deepdetect.o
In file included from apistrategy.h:25:0,
                 from deepdetect.h:25,
                 from deepdetect.cc:22:
services.h:36:82: error: type/value mismatch at argument 1 in template parameter list for 'template<template<class U, class V, class W> class TMLLib, class TInputConnectorStrategy, class TOutputConnectorStrategy, class TMLModel> class dd::MLService'
   typedef mapbox::util::variant<MLService<CaffeLib,ImgInputFileConn,NoOutputConn,CaffeModel>> mls_variant_type;
                                                                                  ^
services.h:36:82: error:   expected a template of type 'template<class U, class V, class W> class TMLLib', got 'template<class TInputConnectorStrategy, class TOutputConnectorStrategy> class dd::CaffeLib'
services.h:36:92: error: template argument 1 is invalid
   typedef mapbox::util::variant<MLService<CaffeLib,ImgInputFileConn,NoOutputConn,CaffeModel>> mls_variant_type;
                                                                                            ^
services.h:36:111: error: invalid type in declaration before ';' token
   typedef mapbox::util::variant<MLService<CaffeLib,ImgInputFileConn,NoOutputConn,CaffeModel>> mls_variant_type;
                                                                                                               ^
services.h: In member function 'int dd::Services::predict(const dd::APIData&, const int&)':
services.h:66:64: error: no matching function for call to 'apply_visitor(dd::visitor_predict&, __gnu_cxx::__alloc_traits<std::allocator<int> >::value_type&)'
       return mapbox::util::apply_visitor(vp,_mlservices.at(pos));
                                                                ^
services.h:66:64: note: candidates are:
In file included from services.h:25:0,
                 from apistrategy.h:25,
                 from deepdetect.h:25,
                 from deepdetect.cc:22:
utils/variant.hpp:689:39: note: template<class V, class F> decltype (V:: visit(v, f)) mapbox::util::apply_visitor(F, const V&)
 auto VARIANT_INLINE static apply_visitor(F f, V const& v) -> decltype(V::visit(v, f))
                                       ^
utils/variant.hpp:689:39: note:   template argument deduction/substitution failed:
utils/variant.hpp: In substitution of 'template<class V, class F> decltype (V:: visit(v, f)) mapbox::util::apply_visitor(F, const V&) [with V = int; F = dd::visitor_predict]':
services.h:66:64:   required from here
utils/variant.hpp:689:95: error: 'visit' is not a member of 'int'
 auto VARIANT_INLINE static apply_visitor(F f, V const& v) -> decltype(V::visit(v, f))
                                                                                               ^
utils/variant.hpp:695:39: note: template<class V, class F> decltype (V:: visit(v, f)) mapbox::util::apply_visitor(F, V&)
 auto VARIANT_INLINE static apply_visitor(F f, V & v) -> decltype(V::visit(v, f))
                                       ^
utils/variant.hpp:695:39: note:   template argument deduction/substitution failed:
utils/variant.hpp: In substitution of 'template<class V, class F> decltype (V:: visit(v, f)) mapbox::util::apply_visitor(F, V&) [with V = int; F = dd::visitor_predict]':
services.h:66:64:   required from here
utils/variant.hpp:695:90: error: 'visit' is not a member of 'int'
 auto VARIANT_INLINE static apply_visitor(F f, V & v) -> decltype(V::visit(v, f))
                                                                                          ^
utils/variant.hpp:703:39: note: template<class V, class F> decltype (V:: binary_visit(v0, v1, f)) mapbox::util::apply_visitor(F, const V&, const V&)
 auto VARIANT_INLINE static apply_visitor(F f, V const& v0, V const& v1) -> decltype(V::binary_visit(v0, v1, f))
                                       ^
utils/variant.hpp:703:39: note:   template argument deduction/substitution failed:
In file included from apistrategy.h:25:0,
                 from deepdetect.h:25,
                 from deepdetect.cc:22:
services.h:66:64: note:   candidate expects 3 arguments, 2 provided
       return mapbox::util::apply_visitor(vp,_mlservices.at(pos));
                                                                ^
In file included from services.h:25:0,
                 from apistrategy.h:25,
                 from deepdetect.h:25,
                 from deepdetect.cc:22:
utils/variant.hpp:709:39: note: template<class V, class F> decltype (V:: binary_visit(v0, v1, f)) mapbox::util::apply_visitor(F, V&, V&)
 auto VARIANT_INLINE static apply_visitor(F f, V & v0, V & v1) -> decltype(V::binary_visit(v0, v1, f))
                                       ^
utils/variant.hpp:709:39: note:   template argument deduction/substitution failed:
In file included from apistrategy.h:25:0,
                 from deepdetect.h:25,
                 from deepdetect.cc:22:
services.h:66:64: note:   candidate expects 3 arguments, 2 provided
       return mapbox::util::apply_visitor(vp,_mlservices.at(pos));
                                                                ^
In file included from deepdetect.h:25:0,
                 from deepdetect.cc:22:
apistrategy.h: At global scope:
apistrategy.h:36:20: warning: unused parameter 'argc' [-Wunused-parameter]
       int boot(int argc, char *argv[]) { return 1; }
                    ^
apistrategy.h:36:37: warning: unused parameter 'argv' [-Wunused-parameter]
       int boot(int argc, char *argv[]) { return 1; }
                                     ^
make: *** [deepdetect.lo] Error 1
